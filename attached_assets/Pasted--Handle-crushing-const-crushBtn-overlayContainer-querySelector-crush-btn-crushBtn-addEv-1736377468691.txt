// Handle crushing
  const crushBtn = overlayContainer.querySelector('.crush-btn');
  crushBtn.addEventListener('click', () => {
    const selectedGrapes = overlayContainer.querySelectorAll('.grape-select:checked');
    const selectedMustStorage = overlayContainer.querySelector('input[name="must-storage"]:checked');

    if (!selectedMustStorage) {
      addConsoleMessage("Please select a storage container for the must");
      return;
    }

    const mustStorage = selectedMustStorage.value;
    const availableSpace = parseFloat(selectedMustStorage.dataset.available);
    const totalGrapes = Array.from(selectedGrapes)
      .reduce((sum, checkbox) => sum + parseFloat(checkbox.dataset.amount), 0);

    if (totalGrapes > availableSpace) {
      addConsoleMessage("Not enough space in selected container for all the must");
      return;
    }

    let playerInventory = JSON.parse(localStorage.getItem('playerInventory')) || [];
    
    selectedGrapes.forEach(checkbox => {
      const storage = checkbox.dataset.storage;
      const resourceName = checkbox.dataset.resource;
      const vintage = checkbox.dataset.vintage;
      const quality = parseFloat(checkbox.dataset.quality);
      const fieldName = checkbox.dataset.field;

      const filteredItems = [];
      const mustItems = [];

      playerInventory.forEach(item => {
        if (item.storage === storage && 
            item.resource.name === resourceName && 
            item.state === 'Grapes') {
          const mustItem = {...item};
          mustItem.state = 'Must';
          mustItem.storage = mustStorage;
          addConsoleMessage(`Crushed ${formatNumber(item.amount)} t of ${resourceName} grapes from ${fieldName}`);
          mustItems.push(mustItem);
          // Don't add the original item to filteredItems
        } else if (item.storage !== storage) {
          // Only keep items from other storage containers
          filteredItems.push(item);
        }
      });

      playerInventory = [...filteredItems, ...mustItems];
      localStorage.setItem('playerInventory', JSON.stringify(playerInventory));
    });